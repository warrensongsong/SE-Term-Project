import org.junit.Test ;import static org.junit.Assert.* ;
import java.util.ArrayList;
 public class md_converter_junit {  String head = "Header";  MDElementVisitor mdev = new MDElementVisitor(); MDElement mdelem = new MDElement();   ArrayList<Structure> structureList; String htmlFileName; String fileName; String wholecontent; String structureContent;   @Test   public void MDElementVisitortest(){  MDElementVisitor mdev1 = new MDElementVisitor();  mdev1.genHtmlName("doc2.html");  assertSame(mdev1.html_name,"doc2.html");    mdev1.visitDocument("doc2.md");  assertSame(mdev1.md_name,"doc2.md");    mdev1.visitStructure("plain");  assertSame(mdev1.conv_option,"plain"); }  @Test   public void MDElementtest1(){    mdev.genHtmlName("doc1.html");  mdev.visitDocument("doc1.md");  mdev.visitStructure("plain");  mdelem.accept(mdev);    assertSame(mdelem.htmlFileName,"doc1.html");    MDParser parser = new MDParser(mdev.md_name);  wholecontent = parser.MdToString();  assertNotNull(wholecontent);    structureList = parser.structureParsing(wholecontent);  assertNotNull(structureList); }  @Test   public void MDElementtest2(){    mdev.genHtmlName("doc2.html");  mdev.visitDocument("doc2.md");  mdev.visitStructure("stylish");  mdelem.accept(mdev);    assertSame(mdelem.htmlFileName,"doc2.html");    MDParser parser = new MDParser(mdev.md_name);  wholecontent = parser.MdToString();  assertNotNull(wholecontent);    structureList = parser.structureParsing(wholecontent);  assertNotNull(structureList); }
 @Test 
 public void MDElementtest3(){  mdev.genHtmlName("doc3.html"); mdev.visitDocument("doc3.md"); mdev.visitStructure("slide"); mdelem.accept(mdev);  assertSame(mdelem.htmlFileName,"doc3.html");  MDParser parser = new MDParser(mdev.md_name); wholecontent = parser.MdToString(); assertNotNull(wholecontent);  structureList = parser.structureParsing(wholecontent); assertNotNull(structureList); }
 @Test 
 public void MDElementtest4(){  mdev.genHtmlName("doc4.html"); mdev.visitDocument("doc4.md"); mdev.visitStructure(""); mdelem.accept(mdev);  assertSame(mdelem.htmlFileName,"doc4.html");  MDParser parser = new MDParser(mdev.md_name); wholecontent = parser.MdToString(); assertNotNull(wholecontent);  structureList = parser.structureParsing(wholecontent); assertNotNull(structureList); }
 @Test   public void HtmlGeneratortest(){
  mdev.genHtmlName("doc1.html");  mdev.visitDocument("doc1.md");  mdev.visitStructure("plain");  mdelem.accept(mdev);  HtmlGenerator generator = new HtmlGenerator(mdelem);  structureContent = generator.HTMLTagMapping();  assertNotNull(structureContent);   }  @Test   public void HtmlGeneratortest2(){
  mdev.genHtmlName("doc2.html");  mdev.visitDocument("doc2.md");  mdev.visitStructure("stylish");  mdelem.accept(mdev);  HtmlGenerator generator = new HtmlGenerator(mdelem);  structureContent = generator.HTMLTagMapping();  assertNotNull(structureContent);   }
 @Test 
 public void HtmlGeneratortest3(){
 mdev.genHtmlName("doc3.html"); mdev.visitDocument("doc3.md"); mdev.visitStructure("slide"); mdelem.accept(mdev); HtmlGenerator generator = new HtmlGenerator(mdelem); structureContent = generator.HTMLTagMapping(); assertNotNull(structureContent);  }
 @Test 
 public void HtmlGeneratortest4(){
 mdev.genHtmlName("doc4.html"); mdev.visitDocument("doc4.md"); mdev.visitStructure(""); mdelem.accept(mdev); HtmlGenerator generator = new HtmlGenerator(mdelem); generator.writeHTML(); structureContent = generator.HTMLTagMapping(); assertNotNull(structureContent);  }    @Test public void testMDParser1() {  MDParser c1 = new MDParser("doc1.md");  c1.MdToString();  c1.structureParsing(c1.wholecontent);  assertTrue(c1.structureList.get(0).structureType.equals(head)); }  @Test public void testMDParser2() {  MDParser c2 = new MDParser("doc2.md");  c2.MdToString();  c2.structureParsing(c2.wholecontent);  assertTrue(c2.structureList.get(0).getStructureType().equals(head)); }  @Test public void testMDParser3() {  MDParser c3 = new MDParser("doc3.md");  c3.MdToString();  c3.structureParsing(c3.wholecontent);  assertTrue(c3.structureList.get(0).structureType.equals(head)); }  @Test public void testMDParser4() {  MDParser c4 = new MDParser("doc4.md");  c4.MdToString();  c4.structureParsing(c4.wholecontent);  assertTrue(c4.structureList.get(0).structureType.equals(head)); }  @Test public void testMDParser10() {  MDParser c4 = new MDParser("doc5.md");  assertTrue(c4.MdToString()==null); } }
